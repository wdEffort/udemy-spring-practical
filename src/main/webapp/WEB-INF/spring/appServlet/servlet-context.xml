<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
                           https://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- WEB과 관련된 설정 -->

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enable the Spring MVC @Controller programming model -->
    <!--
    스프링 MVC 설정 파일에서는 <annotation-driven/> 태그를 사용하고,
    일반적으로는 <context:annotation-config/> 태그를 사용해야 한다.
     -->
    <annotation-driven/>

    <!--
    컴포넌트 클래스를 스캔하여 Bean으로 등록한다.
    컴포넌트 클래스는 @Component, @Configuration, @Controller, @Service, @Repository 어노테이션이 붙은 클래스를 의미한다.
    <context:component-scan /> 태그의 base-package 속성은 스캔할 지점을 패키지 단위로 설정한다.
     -->
    <context:component-scan base-package="com.udemy.spring.practical"/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up statis resources -->
    <resources mapping="/resources/**" location="/resources/"/>

    <!-- Resolves views seleted for rendering by @Controllers to .jsp resources in the /WEB-INF/views -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!-- Oracle DataSource -->
    <beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <beans:property name="username" value="udemy"/>
        <beans:property name="password" value="udemy"/>
    </beans:bean>

    <!-- JdbcTemplate -->
    <beans:bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- DataSource Bean을 주입 -->
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- TransactionManager -->
    <beans:bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- TransactionTemplate 1 -->
    <beans:bean name="transactionTemplate1" class="org.springframework.transaction.support.TransactionTemplate">
        <beans:property name="transactionManager" ref="transactionManager"/>
        <!-- required -->
        <beans:property name="propagationBehavior" value="0"/>
    </beans:bean>

    <!-- TransactionTemplate 2 -->
    <beans:bean name="transactionTemplate2" class="org.springframework.transaction.support.TransactionTemplate">
        <beans:property name="transactionManager" ref="transactionManager"/>
        <!-- required -->
        <beans:property name="propagationBehavior" value="0"/>
        <!-- never -->
        <!--<beans:property name="propagationBehavior" value="5"/>-->
    </beans:bean>

</beans:beans>